#!/usr/bin/env python

import sys
import argparse
import fiona
from shapely.geometry import shape


parser = argparse.ArgumentParser(description='Get a list of NED ids for the given state')
parser.add_argument('--state', help='state name', required=True)
parser.add_argument('--buffer', help='buffer area around state', default=1.5)
args = parser.parse_args()

ned_ids = []

with fiona.open('data/shp/states.shp') as src:
    state = list(filter(lambda f: f['properties']['NAME'] == args.state, src))
    if len(state) > 1 or len(state) == 0:
        print("Error. Found %s states" % len(state))
    else:
        state = state[0]

    geom = shape(state['geometry']).buffer(1.5)

    with fiona.open('data/shp/arc_reference.shp') as ref:
        for layer in ref:
            if geom.intersects(shape(layer['geometry'])):
                ned_ids.append(layer['properties']['FILE_ID'])

print(str.join(' ', ned_ids))
